{"version":3,"sources":["components/navbar.jsx","components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","app.jsx","index.js"],"names":["Navbar","props","className","totalCount","Habit","memo","habit","name","count","handleIncrement","useCallback","onIncrement","handleDecrement","onDecrement","handleDelete","onDelete","onClick","HabitAddForm","formRef","React","createRef","inputRef","handleSubmit","event","preventDefault","current","value","onAdd","reset","ref","onSubmit","type","placeholder","habits","map","id","onReset","App","state","handleAdd","concat","setState","item","filter","handleReset","this","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.244e856f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navbar = (props) => {\n    return (\n        <header className=\"navbar\">\n            <i className=\"navbar-logo fas fa-leaf\" />\n            <span className=\"navbar-name\">Habit Tracker</span>\n            <span className=\"navbar-count\">{props.totalCount}</span>\n        </header>\n    );\n};\n\nexport default Navbar;\n","import React, { memo, useCallback } from \"react\";\n\nconst Habit = memo((props) => {\n    const { name, count } = props.habit;\n    const habit = props.habit;\n\n    // make callback functions\n    // if button clicked, just call the functions\n    const handleIncrement = useCallback(() => {\n        props.onIncrement(props.habit);\n    });\n\n    const handleDecrement = useCallback(() => {\n        props.onDecrement(props.habit);\n    });\n\n    const handleDelete = useCallback(() => {\n        props.onDelete(props.habit);\n    });\n\n    return (\n        <li className=\"habit\">\n            <span className=\"habit-name\">{name}</span>\n            <span className=\"habit-count\">{count}</span>\n            <button\n                className=\"habit-button habit-increase\"\n                onClick={handleIncrement}\n            >\n                <i className=\"fas fa-plus-square\"></i>\n            </button>\n            <button\n                className=\"habit-button habit-decrease\"\n                onClick={handleDecrement}\n            >\n                <i className=\"fas fa-minus-square\"></i>\n            </button>\n            <button\n                className=\"habit-button habit-delete\"\n                onClick={handleDelete}\n            >\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </li>\n    );\n});\n\nexport default Habit;\n","import React, { memo, useCallback } from \"react\";\n\nconst HabitAddForm = memo((props) => {\n    const formRef = React.createRef();\n    const inputRef = React.createRef();\n\n    const handleSubmit = useCallback((event) => {\n        event.preventDefault();\n        const name = inputRef.current.value;\n        name && props.onAdd(name);\n        formRef.current.reset();\n        // this.inputRef.current.value = \"\";\n    });\n\n    return (\n        <form ref={formRef} className=\"add-form\" onSubmit={handleSubmit}>\n            <input\n                ref={inputRef}\n                className=\"add-input\"\n                type=\"text\"\n                placeholder=\"Habit\"\n            />\n            <button className=\"add-button\">Add</button>\n        </form>\n    );\n});\n\nexport default HabitAddForm;\n","import React from \"react\";\nimport Habit from \"./habit\";\nimport HabitAddForm from \"./habitAddForm\";\n\nconst habits = (props) => {\n    return (\n        <div className=\"habits\">\n            <HabitAddForm onAdd={props.onAdd} />\n            <ul>\n                {props.habits.map((habit) => {\n                    return (\n                        <Habit\n                            key={habit.id}\n                            habit={habit}\n                            onIncrement={props.onIncrement}\n                            onDecrement={props.onDecrement}\n                            onDelete={props.onDelete}\n                        />\n                    );\n                })}\n            </ul>\n            <button className=\"habits-reset\" onClick={props.onReset}>\n                Reset All\n            </button>\n        </div>\n    );\n};\n\nexport default habits;\n","import \"./app.css\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/navbar\";\nimport Habits from \"./components/habits\";\n\nclass App extends Component {\n    state = {\n        id: 3,\n        habits: [\n            { id: 1, name: \"Reading\", count: 0 },\n            { id: 2, name: \"Running\", count: 0 },\n            { id: 3, name: \"Coding\", count: 0 },\n        ],\n    };\n\n    // make callback functions\n    // if button clicked, just call the functions\n    handleAdd = (name) => {\n        const id = this.state.id + 1;\n        const habits = [...this.state.habits].concat([\n            { id: id, name: name, count: 0 },\n        ]);\n\n        this.setState({ id, habits });\n    };\n\n    handleIncrement = (habit) => {\n        // make new array to change state\n        const habits = this.state.habits.map((item) => {\n            if (item.id === habit.id) {\n                // return new habit object\n                return { ...habit, count: habit.count + 1 };\n            }\n            return item;\n        });\n\n        this.setState({ habits });\n    };\n\n    handleDecrement = (habit) => {\n        const habits = this.state.habits.map((item) => {\n            if (item.id === habit.id) {\n                // return new habit object\n                const count = habit.count - 1;\n                return { ...habit, count: count < 0 ? 0 : count };\n            }\n            return item;\n        });\n        this.setState({ habits });\n    };\n\n    handleDelete = (habit) => {\n        const habits = this.state.habits.filter((item) => item.id !== habit.id);\n\n        this.setState({ habits });\n    };\n\n    handleReset = () => {\n        const habits = this.state.habits.map((habit) => {\n            if (habit.count !== 0) {\n                // return new habit object\n                return { ...habit, count: 0 };\n            }\n            return habit;\n        });\n\n        this.setState({ habits });\n    };\n\n    render() {\n        return (\n            <>\n                <Navbar\n                    totalCount={\n                        this.state.habits.filter((item) => item.count > 0)\n                            .length\n                    }\n                />\n                <Habits\n                    habits={this.state.habits}\n                    onAdd={this.handleAdd}\n                    onIncrement={this.handleIncrement}\n                    onDecrement={this.handleDecrement}\n                    onDelete={this.handleDelete}\n                    onReset={this.handleReset}\n                />\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport SimpleHabit from './components/simpleHabit';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}